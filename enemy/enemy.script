local col = require("main.collision")

local speed = 100
local z_axis = vmath.vector3(0, 0, 1)
local max_dev_change_delay = 4

function init(self)
	self.direction = vmath.vector3()
	self.deviation = vmath.quat()
	self.correction = vmath.vector3()
	set_new_deviation(self)
end

function update(self, dt)
	self.direction = get_player_direction()
	self.direction = vmath.rotate(self.deviation, self.direction)
	go.set_position(go.get_position() + self.direction*speed*dt)
	self.correction = vmath.vector3()
end

function set_new_deviation(self)
	local rand_angle = (math.random()-0.5)*2  -- [-1,1) rad
	self.deviation = vmath.quat_axis_angle(z_axis, rand_angle)
	timer.delay(math.random()*max_dev_change_delay, false, set_new_deviation)
end

function get_player_direction()
	local direction = go.get_position("/player") - go.get_position()
	if vmath.length_sqr(direction) > 0 then
		direction = vmath.normalize(direction)
	end
	return direction
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") then
		self. correction = col.resolve_contact_point(message, self.correction, go)
	end
end